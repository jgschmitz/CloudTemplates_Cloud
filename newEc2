#!/bin/bash

# Author: [Your Name]
# This script creates a new EC2 instance and assigns a static IP address.

# Retrieve the static IP address from a file
IP_ADDRESS=$(cat ~/.ec2/ip_address)

# Create a new t1.micro instance using ami-cef405a7 (64-bit Ubuntu Server 10.10 Maverick Meerkat)
# - Default security group
# - 16GB EBS as /dev/sda1
# - The instance will stop on shutdown
# - Run a custom user data script (instance_installs.sh)
# EC2_INSTANCE_KEY should be an environment variable containing the name of the keypair
EC2_RUN_RESULT=$(ec2-run-instances \
  --instance-type t1.micro \
  --group default \
  --region us-east-1 \
  --key $EC2_INSTANCE_KEY \
  --block-device-mapping "/dev/sda1=:16:true" \
  --instance-initiated-shutdown-behavior stop \
  --user-data-file instance_installs.sh \
  ami-cef405a7)

# Extract the instance ID from the EC2 run result
INSTANCE_ID=$(echo "$EC2_RUN_RESULT" | grep 'INSTANCE' | awk '{print $2}')

# Verify the instance is running, with up to 5 attempts
max_attempts=5
attempts=0
while [ $attempts -lt $max_attempts ]; do
  echo "Attempt $((attempts + 1)) at verifying instance $INSTANCE_ID is running..."
  if ec2-describe-instances $INSTANCE_ID | grep -q "running"; then
    echo "Instance $INSTANCE_ID is running."
    break
  fi
  attempts=$((attempts + 1))
  sleep 5
done

# Check if the instance started successfully
if [ $attempts -eq $max_attempts ]; then
  echo "Instance $INSTANCE_ID failed to start after $max_attempts attempts. Exiting..."
  exit 1
fi

# Associate the static IP address with the instance
ec2-associate-address $IP_ADDRESS -i $INSTANCE_ID
echo "Instance $INSTANCE_ID has been created and assigned static IP address $IP_ADDRESS."

# Remove the server's old entry from known_hosts (due to potential signature changes)
ssh-keygen -R $IP_ADDRESS

# SSH into the newly created EC2 instance
ssh -i "$EC2_HOME/$EC2_INSTANCE_KEY.pem" ubuntu@$IP_ADDRESS
